# syntax=docker/dockerfile:1.7.0
services:
    mysql:
        image: docker.io/library/mysql:8.4.2
        environment:
            - MYSQL_ROOT_PASSWORD=$DB_ROOT_PASSWORD
            - MYSQL_DATABASE=$DB_NAME
            - MYSQL_USER=$DB_USERNAME
            - MYSQL_PASSWORD=$DB_PASSWORD
        ports:
            - 127.0.0.1:3306:3306
        volumes:
            - db_data:/var/lib/mysql
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
            interval: 1m30s
            timeout: 30s
            retries: 5
            start_period: 30s
    snipeit:
        depends_on:
            mysql:
                condition: service_healthy
        image: docker.io/snipe/snipe-it:v7.0.7-alpine
        environment:    
            - APP_ENV=production
            - APP_DEBUG=false
            - APP_KEY=base64:ZG7oBacC8iO18V7m5kRxLXKxVWsnc3r5iREQvqzyQ8k=
            - DB_CONNECTION=mysql
            - DB_HOST=mysql
            - DB_DATABASE=$DB_NAME
            - DB_USERNAME=$DB_USERNAME
            - DB_PASSWORD=$DB_PASSWORD
            - APP_URL=$BASE_URL
        ports:
            - 127.0.0.1:27015:80
        volumes:
            - snipe_data_config:/config
            - snipe_data:/var/lib/snipeit
        healthcheck:
            test: curl --fail $APP_URL || exit 1
            interval: 1m30s
            timeout: 30s
            retries: 5
            start_period: 30s
volumes:
    snipe_data:
        driver:
            local
    snipe_data_config:
        driver:
            local
    db_data:
        driver:
            local
env_file:
    - path: ./.env
    - required: true
